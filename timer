<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contador Regressivo - Olutrip</title>
    
    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Google Fonts for a nice look -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@700&family=Roboto+Mono:wght@400;700&display=swap" rel="stylesheet">
    
    <style>
        /* Custom styles and font families */
        body {
            font-family: 'Roboto Mono', monospace;
            background-color: #ffffff; /* White background */
        }

        .title-font {
            font-family: 'Poppins', sans-serif;
        }
    </style>
</head>
<body class="text-black flex items-center justify-center min-h-screen p-4">

    <div class="text-center w-full max-w-4xl mx-auto">
        <!-- Main Title -->
        <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold mb-4 text-gray-900 title-font tracking-wider">
            Olutrip - ExplosÃ£o de DendÃª
        </h1>
        
        <!-- Subtitle -->
        <p class="text-lg md:text-xl mb-10 text-gray-600">A contagem regressiva comeÃ§ou!</p>
        
        <!-- Countdown Timer Container -->
        <div id="countdown" class="grid grid-cols-2 sm:grid-cols-4 gap-4 md:gap-8">
            <!-- Timer boxes will be dynamically inserted here by JavaScript -->
        </div>

        <!-- Message to show when the countdown is over -->
        <div id="message" class="hidden text-4xl md:text-6xl font-bold mt-12 text-green-600 animate-pulse">
            ðŸ’¥ CHEGOU O DIA! ðŸ’¥
        </div>
    </div>

    <script>
        // Get the HTML elements to update
        const countdownElement = document.getElementById('countdown');
        const messageElement = document.getElementById('message');

        // --- CONFIGURATION ---
        // Set the date and time we're counting down to.
        // The format is "Month Day, Year HH:MM:SS"
        // Note: The user didn't specify a year, so we're assuming the next occurrence.
        // As of mid-2025, the next "September 2" is in 2025.
        const countDownDate = new Date("Sep 2, 2025 08:15:00").getTime();

        // This function runs every second to update the timer
        const updateCountdown = () => {
            // Get today's date and time
            const now = new Date().getTime();
            
            // Find the distance between now and the count down date
            const distance = countDownDate - now;
            
            // If the count down is finished, show a message
            if (distance < 0) {
                clearInterval(interval); // Stop the timer
                countdownElement.classList.add('hidden'); // Hide the countdown
                messageElement.classList.remove('hidden'); // Show the final message
                return;
            }
            
            // Time calculations for days, hours, minutes and seconds
            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Function to add a leading zero if the number is less than 10
            const formatTime = (time) => String(time).padStart(2, '0');
            
            // Display the result in the elements
            countdownElement.innerHTML = `
                <div class="bg-gray-100 p-4 sm:p-6 rounded-xl shadow-lg border border-gray-200">
                    <span class="text-4xl sm:text-5xl md:text-6xl font-bold text-gray-800">${formatTime(days)}</span>
                    <p class="text-sm md:text-base text-gray-500 mt-2">Dias</p>
                </div>
                <div class="bg-gray-100 p-4 sm:p-6 rounded-xl shadow-lg border border-gray-200">
                    <span class="text-4xl sm:text-5xl md:text-6xl font-bold text-gray-800">${formatTime(hours)}</span>
                    <p class="text-sm md:text-base text-gray-500 mt-2">Horas</p>
                </div>
                <div class="bg-gray-100 p-4 sm:p-6 rounded-xl shadow-lg border border-gray-200">
                    <span class="text-4xl sm:text-5xl md:text-6xl font-bold text-gray-800">${formatTime(minutes)}</span>
                    <p class="text-sm md:text-base text-gray-500 mt-2">Minutos</p>
                </div>
                <div class="bg-gray-100 p-4 sm:p-6 rounded-xl shadow-lg border border-gray-200">
                    <span class="text-4xl sm:text-5xl md:text-6xl font-bold text-gray-800">${formatTime(seconds)}</span>
                    <p class="text-sm md:text-base text-gray-500 mt-2">Segundos</p>
                </div>
            `;
        };
        
        // Update the count down every 1 second
        const interval = setInterval(updateCountdown, 1000);
        
        // Initial call to display the timer immediately without waiting for the first second
        updateCountdown();
    </script>

</body>
</html>
